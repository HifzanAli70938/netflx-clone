{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","console","log","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","APIKEY","requests","fetchTreding","fetchNetFlixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorroMovies","fetchRomanticMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","orignal_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad5d46f7.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n})\r\n\r\nexport default instance;","import React, { useEffect, useState } from 'react'\r\nimport './Row.css';\r\nimport axios from './axios';\r\nimport YouTube from 'react-youtube'\r\nimport movieTrailer from 'movie-trailer'\r\n\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original\";\r\n\r\nfunction Row({title, fetchUrl, isLargeRow}) {\r\n    const [movies, setMovies] = useState([])\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl)\r\n            setMovies(request.data.results)\r\n            console.log(request.data.results)\r\n            return request;\r\n        }\r\n\r\n        fetchData();\r\n    }, [fetchUrl])\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1,\r\n        }\r\n    }\r\n\r\n    const handleClick = (movie) => {\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\");\r\n        } else {\r\n            movieTrailer(movie?.name || \"\")\r\n            .then((url) => {\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            })\r\n            .catch(() => console.log('Temporary Unavailable'))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = \"row\">\r\n            {title}\r\n            <div className = \"row__posters\">\r\n                {movies.map(movie => (\r\n                    <img \r\n                        key={movie.id}\r\n                        onClick = {() => handleClick(movie)}\r\n                        className = {`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                        src = {`${baseUrl}${\r\n                                    isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n                        alt = {movie.name} />\r\n                ))}\r\n            </div>\r\n                        {trailerUrl && <YouTube videoId = {trailerUrl} opts = {opts}/> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","\r\nconst APIKEY = \"d072e2ded577c770fc22d441add6acc9\";\r\n\r\n\r\nconst requests = {\r\n    fetchTreding: `/trending/all/week?api_key=${APIKEY}&language=en-US`,\r\n    fetchNetFlixOriginals:`/discover/tv?api_key=${APIKEY}&with_networks=213`,\r\n    fetchTopRated:`/movie/top_rated?api_key=${APIKEY}&language=en-US`,\r\n    fetchActionMovies:`/discover/movie?api_key=${APIKEY}&with_genres=28`,\r\n    fetchComedyMovies:`/discover/movie?api_key=${APIKEY}&with_genres=35`,\r\n    fetchHorroMovies:`/discover/movie?api_key=${APIKEY}&with_genres=27`,\r\n    fetchRomanticMovies:`/discover/movie?api_key=${APIKEY}&with_genres=10749`,\r\n    fetchDocumentaries:`/discover/movie?api_key=${APIKEY}&with_genres=99`\r\n}\r\n\r\nexport default requests;","  \r\nimport React, {useEffect, useState} from 'react'\r\nimport axios from './axios'\r\nimport requests from './requests'\r\nimport \"./Banner.css\"\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(requests.fetchNetFlixOriginals)\r\n\r\n            setMovie(request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length)\r\n            ])\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[])\r\n    console.log(movie);\r\n\r\n    function truncate(str, n){\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n    }\r\n\r\n    return (\r\n        <header className = \"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\r\n                backgroundPosition: \"center center\"\r\n            }}\r\n        >\r\n\r\n            <div className = \"banner__contents\">\r\n                <h1 className = \"banner__title\">\r\n                    {movie?.title || movie.name || movie?.orignal_name}\r\n                </h1>\r\n\r\n                <div className = \"banner__buttons\">\r\n                    <button className = \"banner__button\">Play</button>\r\n                    <button className = \"banner__button\">My List</button>\r\n                </div>\r\n                    <h1 className = \"banner__description\">{truncate(movie?.overview, 150)}</h1>\r\n            </div>\r\n            <div className = \"banner__fadeBottom\" ></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner","import React, { useEffect, useState } from 'react'\r\nimport \"./Nav.css\"\r\n\r\nfunction Nav() {\r\n\r\n    const [show, handleShow] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if(window.scrollY > 100) {\r\n                handleShow(true);\r\n            } else handleShow(false);\r\n        })\r\n        return () =>{\r\n            window.removeEventListener(\"scroll\")    \r\n        }\r\n    }, [])\r\n    return (\r\n        <div className = {`nav ${ show && \"nav__black\" }`}>\r\n\r\n            <img className = \"nav__logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n\r\n            <img className = \"nav__avtar\"\r\n                src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav","\nimport React from 'react'\nimport './App.css';\nimport Row from './Row'\nimport requests from './requests'\nimport Banner from './Banner'\nimport Nav from './Nav'\n\n\nfunction App() {\n  return (\n    \n\n    //HeaderNav\n    <div className=\"App\">\n        <Nav />\n        <Banner />\n        <Row \n        title = \"NETFLIX ORIGINALS\" \n        fetchUrl = {requests.fetchNetFlixOriginals}\n        isLargeRow = {true}\n        />\n        <Row title = \"Trending Now\" fetchUrl = {requests.fetchTreding}/>\n        <Row title = \"Top Rated\" fetchUrl = {requests.fetchTopRated}/>\n        <Row title = \"Action Movies\" fetchUrl = {requests.fetchActionMovies}/>\n        <Row title = \"Horror Movies\" fetchUrl = {requests.fetchHorroMovies}/>\n        <Row title = \"Romance Movies\" fetchUrl = {requests.fetchRomanticMovies}/>\n        <Row title = \"Documentaries\" fetchUrl = {requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}